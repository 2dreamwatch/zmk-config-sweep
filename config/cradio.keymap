// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"

// Custom Includes from https://github.com/infused-kim/zmk-config
#include "behaviours_homerow_mods.dtsi"

// Layers

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
        
        // tap: sticky shift | double tap: capsword
        ss_cw: ss_cw {
            compatible = "zmk,behavior-tap-dance";
            label = "cc_sw";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&skq LSHIFT>, <&caps_word>;
        };
        
        // tap: backspace | shift + tap: delete | hold: num layer
        bdln: bdln {
            compatible = "zmk,behavior-mod-morph";
            label = "bdln";
            #binding-cells = <0>;
            bindings = <&lt 2 BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

//      
    macros {
    // prose macros for seamless typing
        ZMK_MACRO(dot_sp,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&kp DOT &kp SPACE &skq LSHIFT>;
        )
        ZMK_MACRO(com_sp,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&kp COMMA &kp SPACE>;
        )  
        ZMK_MACRO(q_sp,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&skq LSHIFT &kp FSLH &kp SPACE &skq LSHIFT>;
        )     
        ZMK_MACRO(exc_sp,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&skq LSHIFT &kp N1 &kp SPACE &skq LSHIFT>;
        )
        ZMK_MACRO(dsh_sp,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&kp SPACE &kp MINUS &kp SPACE>;
        )
    };
    
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q          &kp W           &kp E          &kp R                   &kp T       &kp Y      &kp U                    &kp I           &kp O            &kp P
            &hm_l LGUI A   &hm_l LCTRL S   &hm_l LALT D   &hm_shift_l LSHFT F     &kp G       &kp H      &hm_shift_r RSHFT J      &hm_r RCTRL K   &hm_r RALT L     &hm_r RGUI SQT
            &kp Z      &kp X      &kp C      &kp V      &kp B                                 &kp N      &kp M                    &com_sp         &dot_sp          &q_sp
                                                                    &ss_cw        &bdln       &lt 1 SPACE  &lt 3 ENTER
            >;
        };

        right_layer {
            bindings = <
            &kp ESC     &kp LC(LS(TAB))     &kp LC(TAB)     &kp LA(BSPC) &kp LA(DEL)         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp COLON
            &kp LC(A)   &kp LA(LS(TAB))     &kp LA(TAB)     &kp LC(BSPC) &kp LC(DEL)         &kp LARW   &kp DARW   &kp UARW   &kp RARW   &kp SEMI
            &kp LC(Z)   &kp LC(X)           &kp LC(C)       &kp LC(V)    &kp TAB             &kp AMPS   &kp LPAR   &dsh_sp    &exc_sp    &trans
                                                            &kp ESC      &kp TAB             &trans     &trans
            >;
        };

        left_layer {
            bindings = <
            &kp LBKT   &kp RBKT  &kp LBRC  &kp RBRC     &kp BSLH       &kp FSLH   &kp N7      &kp N8   &kp N9   &kp COLON
            &kp DQT    &kp ASTRK &kp LPAR  &kp RPAR     &kp PIPE       &kp DOT    &kp N4      &kp N5   &kp N6   &kp PLUS
            &trans     &trans    &kp LT    &kp GT       &kp GT         &kp MINUS  &kp N1      &kp N2   &kp N3   &kp EQUAL
                                           &trans       &trans         &kp SPACE  &kp N0
            >;
        };
                      
        fun_layer {
            bindings = <
            &trans 	    &kp C_MUTE 	&kp C_VOL_DN	&kp C_VOL_UP  	&none     		       	&trans &kp F7 &kp F8 &kp F9 &kp F12
            &kp LGUI 	&kp LALT 	&kp LCTRL 		&kp LSHIFT 		&none           		&trans &kp F4 &kp F5 &kp F6 &kp F11
            &trans		&trans	 	&kp C_BRI_DN	&kp C_BRI_UP 	&none					&trans &kp F1 &kp F2 &kp F3 &kp F10
                                   						&mo 4   	&trans           		&trans 		&trans
            >;
        }; 
        
        settings {
            bindings = <
            &sys_reset &trans &trans &trans &trans          &bt BT_CLR &trans &trans &trans &sys_reset
            &trans &trans &trans &trans &trans              &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
            &bootloader &trans &trans &trans &trans         &trans &trans &trans &trans &bootloader
                                      &trans &trans         &trans &trans
            >;
        };   
    };
};
