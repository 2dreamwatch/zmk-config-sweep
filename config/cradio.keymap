/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp SINGLE_QUOTE   &kp COMMA     &kp DOT        &kp P                           &kp Y    &kp F          &kp G       &kp C       &kp R        &kp L
      &hm LCTRL A  &hm LALT O  &hm LGUI E  &hm LSHFT U                           &kp I    &kp D    &hm RSHFT H  &hm RGUI T  &hm RALT N  &hm RCTRL S
  &lt 1 SEMICOLON       &kp Q       &kp J        &kp K                           &kp X    &kp B          &kp M       &kp W       &kp V      &lt 1 Z
                                                 &mo 3  &hm LA(LC(LS(LEFT_GUI))) SPACE  &kp RET  &kp BACKSPACE
            >;
        };

        Symbols {
            bindings = <
 &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
       &trans        &trans        &trans  &kp LEFT_SHIFT  &kp BACKSLASH     &kp SLASH  &kp RIGHT_SHIFT        &trans        &trans     &kp MINUS
       &trans        &trans        &trans          &trans         &trans     &kp TILDE           &trans        &trans        &trans     &kp EQUAL
                                                   &trans         &trans        &trans           &trans
            >;
        };

        Navigation {
            bindings = <
    &kp ESCAPE   &trans  &trans  &trans  &trans  &trans              &trans    &trans               &trans  &kp LA(BACKSPACE)
 &kp BACKSPACE  &kp DEL  &trans  &trans  &trans  &trans  &kp LA(LEFT_ARROW)    &kp UP  &kp LA(RIGHT_ARROW)             &trans
       &kp TAB   &trans  &trans  &trans  &trans  &trans            &kp LEFT  &kp DOWN            &kp RIGHT             &trans
                                 &trans  &trans  &trans              &trans
            >;
        };

        Mission {
            bindings = <
 &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &trans  &trans  &trans  &trans  &trans  &trans
           &trans            &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
           &trans            &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                                 &trans  &trans  &trans  &trans
            >;
        };
    };
};
